<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.i1314i.ourproject.mapper.ProductPriceMapper">
  <resultMap id="BaseResultMap" type="com.i1314i.ourproject.po.javabean.ProductPrice">
    <id column="jiage_id" jdbcType="INTEGER" property="jiageId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="monavalent" jdbcType="VARCHAR" property="monavalent" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="market" jdbcType="VARCHAR" property="market" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    jiage_id, name, category, monavalent, unit, market
  </sql>
  <select id="selectByExample" parameterType="com.i1314i.ourproject.po.javabean.ProductPriceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_price
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product_price
    where jiage_id = #{jiageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product_price
    where jiage_id = #{jiageId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.i1314i.ourproject.po.javabean.ProductPriceExample">
    delete from product_price
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.i1314i.ourproject.po.javabean.ProductPrice">
    insert into product_price (jiage_id, name, category, 
      monavalent, unit, market
      )
    values (#{jiageId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, 
      #{monavalent,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, #{market,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.i1314i.ourproject.po.javabean.ProductPrice">
    insert into product_price
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jiageId != null">
        jiage_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="monavalent != null">
        monavalent,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="market != null">
        market,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="jiageId != null">
        #{jiageId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="monavalent != null">
        #{monavalent,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="market != null">
        #{market,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.i1314i.ourproject.po.javabean.ProductPriceExample" resultType="java.lang.Long">
    select count(*) from product_price
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_price
    <set>
      <if test="record.jiageId != null">
        jiage_id = #{record.jiageId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.monavalent != null">
        monavalent = #{record.monavalent,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.market != null">
        market = #{record.market,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_price
    set jiage_id = #{record.jiageId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=VARCHAR},
      monavalent = #{record.monavalent,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      market = #{record.market,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.i1314i.ourproject.po.javabean.ProductPrice">
    update product_price
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="monavalent != null">
        monavalent = #{monavalent,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="market != null">
        market = #{market,jdbcType=VARCHAR},
      </if>
    </set>
    where jiage_id = #{jiageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.i1314i.ourproject.po.javabean.ProductPrice">
    update product_price
    set name = #{name,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      monavalent = #{monavalent,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      market = #{market,jdbcType=VARCHAR}
    where jiage_id = #{jiageId,jdbcType=INTEGER}
  </update>
</mapper>